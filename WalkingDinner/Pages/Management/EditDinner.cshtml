@page
@model WalkingDinner.Pages.Management.EditDinnerModel
@using WalkingDinner.Extensions
@{
    ViewData[ "Title" ] = "Management";
}

<h1>Management</h1>

<div class="container-fluid col-md-8">

    <h3>Uitnodigen</h3>

    <form class="form-horizontal" style="max-width:800px" method="post" asp-page-handler="Invite">

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <span asp-validation-for="Invite" class="text-danger"></span>

        <partial name="_PersonView" for="Invite.Person" />

        <div class="form-group">
            <label asp-for="Invite.EmailAddress" class="control-label">Email adres</label>
            <input asp-for="Invite.EmailAddress" class="form-control" />
            <span asp-validation-for="Invite.EmailAddress" class="text-danger"></span>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <button type="submit" class="btn btn-primary">Uitnodigen</button>
            </div>
        </div>

        @if ( !string.IsNullOrEmpty( (string)ViewData[ "InviteResult" ] ) ) {

            <div class="alert alert-primary">
                @ViewData[ "InviteResult" ]
            </div>
        }

    </form>

    <table class="table">

        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor( model => model.Couple.Validated )
                </th>
                <th>
                    @Html.DisplayNameFor( model => model.Couple.EmailAddress )
                </th>
                <th>
                    @Html.DisplayNameFor( model => model.Couple.PhoneNumber )
                </th>
                <th>
                    Naam
                </th>
                <th>
                    Aantal personen
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach ( var item in Model.Couple.Dinner.Couples ) {
                @*@if ( item.IsAdmin ) { continue; }*@
                <tr>
                    <td>
                        @Html.DisplayFor( modelItem => item.Validated )
                    </td>
                    <td>
                        @Html.DisplayFor( modelItem => item.EmailAddress )
                    </td>
                    <td>
                        @Html.DisplayFor( modelItem => item.PhoneNumber )
                    </td>
                    <td>
                        @item.PersonMain.ToString()
                    </td>
                    <td>
                        @(item.PersonGuest == null ? 1 : 2)
                    </td>
                    <td>
                        @if ( item.IsAdmin ) {
                            <a asp-page="@(ModelPath.Get<Couples.EditCoupleModel>())">Bewerken</a>
                        } else {
                            <a asp-page="@(ModelPath.Get<Management.RemoveCoupleModel>())" asp-route-IdToRemove="@item.ID">Verwijderen</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <h3>Beheer</h3>
    <form class="form-horizontal" method="post" asp-page-handler="Manage">

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group">
            <label asp-for="Couple.Dinner.Title" class="col-sm-2 control-label">Titel</label>
            <input asp-for="Couple.Dinner.Title" class="form-control" />
            <span asp-validation-for="Couple.Dinner.Title" class="text-danger"></span>
        </div>

        @{ #warning Edit dinner }

        @if ( !string.IsNullOrEmpty( (string)ViewData[ "ManageResult" ] ) ) {

            <div class="alert alert-primary">
                @ViewData[ "ManageResult" ]
            </div>
        }

    </form>
</div>